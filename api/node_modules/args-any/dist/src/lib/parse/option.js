"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.option = exports.fromArgs = exports.create = exports.hasPrefix = exports.isKey = exports.empty = exports.Operator = void 0;
const lodash_1 = require("lodash");
const types_1 = require("../../types");
Object.defineProperty(exports, "Operator", { enumerable: true, get: function () { return types_1.Operator; } });
const _1 = require(".");
const operator_1 = require("./operator");
exports.empty = Object.freeze({
    key: "",
    operator: operator_1.operator.default,
    toString: () => "",
    value: ""
});
const defaultFlags = ["h", "debug"];
exports.isKey = (arg) => arg && arg.startsWith(_1.optionMarker);
exports.hasPrefix = (arg, prefix) => exports.isKey(arg) && lodash_1.trimStart(arg, _1.optionMarker).startsWith(`${prefix}${_1.prefixSeparator}`);
const isFlag = (key, flags) => {
    const flagKeys = flags || defaultFlags;
    return flagKeys.find(x => x === _1.prefixless(key)) !== undefined;
};
exports.create = (fields) => {
    const option = { ...exports.empty, ...fields };
    option.toString = () => option.value;
    return option;
};
exports.fromArgs = (key, args, settings) => {
    const index = args.indexOf(key) + 1;
    const [first, second] = [...args].slice(index);
    const flags = settings && settings.flags;
    let op = "";
    let value;
    if (!isFlag(key, flags) && first && !exports.isKey(first) && second && !exports.isKey(second) && operator_1.operator.has(first)) {
        op = first;
        value = second;
    }
    else if (!isFlag(key, flags) && first && !exports.isKey(first)) {
        value = first;
    }
    return exports.create({ key: _1.prefixless(key, settings), operator: operator_1.operator.parse(op), value });
};
exports.option = {
    create: exports.create,
    empty: exports.empty,
    fromArgs: exports.fromArgs,
    hasPrefix: exports.hasPrefix,
    isKey: exports.isKey
};
//# sourceMappingURL=option.js.map