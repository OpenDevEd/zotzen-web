"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.operator = exports.Operator = void 0;
const types_1 = require("../../types");
Object.defineProperty(exports, "Operator", { enumerable: true, get: function () { return types_1.Operator; } });
const operatorMap = new types_1.CaseInsensitiveMap([
    ["le", [types_1.Operator.Le, false]],
    ["<=", [types_1.Operator.Le, true]],
    ["=<", [types_1.Operator.Le, true]],
    ["ge", [types_1.Operator.Ge, false]],
    [">=", [types_1.Operator.Ge, true]],
    ["=>", [types_1.Operator.Ge, true]],
    ["ne", [types_1.Operator.Ne, false]],
    ["!=", [types_1.Operator.Ne, true]],
    ["lt", [types_1.Operator.Lt, false]],
    ["<", [types_1.Operator.Lt, true]],
    ["gt", [types_1.Operator.Gt, false]],
    [">", [types_1.Operator.Gt, true]],
    ["=", [types_1.Operator.Eq, true]],
    [":", [types_1.Operator.Eq, true]]
]);
const operatorIndex = 0;
const defaultOperator = Object.freeze(types_1.Operator.Eq);
const has = (operatorString) => operatorMap.has(operatorString);
const inlinesAllowed = () => [...operatorMap.entries()].filter(x => x[1][1] === true).map(z => z[operatorIndex]);
const parse = (operatorString) => {
    const value = operatorMap.get(operatorString || "");
    return (value && value[operatorIndex]) || types_1.Operator.Eq;
};
exports.operator = {
    default: defaultOperator,
    has,
    inlinesAllowed,
    parse
};
//# sourceMappingURL=operator.js.map